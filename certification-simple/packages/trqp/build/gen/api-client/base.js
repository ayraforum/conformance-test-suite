"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * ToIP Trust Registry (Query) Protocol v2 - Working Draft
 * # Trust Registry capabilities * Allow querying for critical items in a digital trust ecosystem: Entities, Registries, and Resources that are required to operate in the ecosysystem. # Registry of Registries (RoR) capabilities. RoR capabilities include:   * Listing Registries that are known (to the registry being queried).   * list the acknowledged trust registries that the RoR recognizes and what that may mean in the context of a particular governance framework.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: darrell.odonnell@continuumloop.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.operationServerMap = exports.RequiredError = exports.BaseAPI = exports.COLLECTION_FORMATS = exports.BASE_PATH = void 0;
const axios_1 = __importDefault(require("axios"));
exports.BASE_PATH = "https://virtserver.swaggerhub.com/darrellodonnell/ToIP.TrustRegistry/0.1.0".replace(/\/+$/, "");
/**
 *
 * @export
 */
exports.COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};
/**
 *
 * @export
 * @class BaseAPI
 */
class BaseAPI {
    constructor(configuration, basePath = exports.BASE_PATH, axios = axios_1.default) {
        var _a;
        this.basePath = basePath;
        this.axios = axios;
        if (configuration) {
            this.configuration = configuration;
            this.basePath = (_a = configuration.basePath) !== null && _a !== void 0 ? _a : basePath;
        }
    }
}
exports.BaseAPI = BaseAPI;
;
/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
class RequiredError extends Error {
    constructor(field, msg) {
        super(msg);
        this.field = field;
        this.name = "RequiredError";
    }
}
exports.RequiredError = RequiredError;
/**
 *
 * @export
 */
exports.operationServerMap = {};
//# sourceMappingURL=base.js.map