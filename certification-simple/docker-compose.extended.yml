version: '3.8'

networks:
  cts-network:
    driver: bridge

services:
  ui:
    build:
      context: .
      dockerfile: packages/Dockerfile.ui
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - cts-network

  server:
    build:
      context: .
      dockerfile: packages/Dockerfile.server
    ports:
      - "5005:5005"
      - "5006:5006"
    environment:
      - NODE_ENV=production
      - SERVER_PORT=5005
      - AGENT_PORT=5006
      - USE_NGROK=${USE_NGROK:-false}
      - NGROK_AUTH_TOKEN=${NGROK_AUTH_TOKEN}
      - API_URL=http://localhost:5005
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    volumes:
      - wallet_data:/app/data/wallets
      - logs_data:/app/logs
    networks:
      - cts-network

  test-verifier:
    build:
      context: .
      dockerfile: packages/Dockerfile.test-verifier
    environment:
      - NODE_ENV=development
      - SERVER_HOST=server
      - SERVER_PORT=5005
      - VERIFIER_PORT=5008
      - TEST_SCRIPT=${TEST_SCRIPT:-test-verifier}  # Allow override
      - VERIFIER_ENDPOINT_PREFIX=${VERIFIER_ENDPOINT_PREFIX:-test-verifier}
      - SERVICE_ENDPOINT=${SERVICE_ENDPOINT:-test-verifier}
    depends_on:
      server:
        condition: service_healthy
    restart: "no"  # Don't restart automatically since this is a test runner
    volumes:
      - test_wallet_data:/app/data/test-wallets
      - test_logs:/app/logs
    networks:
      - cts-network

  # Optional: Additional test services for parallel execution
  test-holder:
    build:
      context: .
      dockerfile: packages/Dockerfile.test-verifier
    environment:
      - NODE_ENV=development
      - SERVER_HOST=server
      - SERVER_PORT=5005
      - VERIFIER_PORT=5009
      - TEST_SCRIPT=test-holder
      - VERIFIER_ENDPOINT_PREFIX=${VERIFIER_ENDPOINT_PREFIX:-test-holder}
      - SERVICE_ENDPOINT=${SERVICE_ENDPOINT:-test-holder}
    depends_on:
      server:
        condition: service_healthy
    restart: "no"
    volumes:
      - test_wallet_data:/app/data/test-wallets
      - test_logs:/app/logs
    networks:
      - cts-network
    profiles:
      - testing  # Only start when explicitly requested

  test-integration:
    build:
      context: .
      dockerfile: packages/Dockerfile.test-verifier
    environment:
      - NODE_ENV=development
      - SERVER_HOST=server
      - SERVER_PORT=5005
      - VERIFIER_PORT=5010
      - TEST_SCRIPT=test-integration
      - VERIFIER_ENDPOINT_PREFIX=${VERIFIER_ENDPOINT_PREFIX:-test-integration}
      - SERVICE_ENDPOINT=${SERVICE_ENDPOINT:-test-integration}
    depends_on:
      server:
        condition: service_healthy
    restart: "no"
    volumes:
      - test_wallet_data:/app/data/test-wallets
      - test_logs:/app/logs
    networks:
      - cts-network
    profiles:
      - testing

volumes:
  wallet_data:
  logs_data:
  test_wallet_data:
  test_logs:
