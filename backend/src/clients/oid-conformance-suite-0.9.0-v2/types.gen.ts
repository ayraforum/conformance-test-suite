// This file is auto-generated by @hey-api/openapi-ts

export type JWKSet = {
    keys?: Array<{
        [key: string]: unknown;
    }>;
};

export type PaginationRequest = {
    /**
     * Page number (0-based)
     */
    page?: number;
    /**
     * Number of items per page
     */
    size?: number;
};

export type TestLog = {
    id?: string;
    testName?: string;
    variant?: {
        [key: string]: unknown;
    };
    results?: Array<{
        [key: string]: unknown;
    }>;
};

export type TestPlan = {
    /**
     * Name of the test plan
     */
    name?: string;
    /**
     * Unique identifier for the test plan
     */
    id?: string;
    modules?: Array<{
        testModule?: string;
        instances?: Array<(string)>;
    }>;
};

export type CreateTestPlanData = {
    body: {
        planName?: string;
        variant?: {
            [key: string]: unknown;
        };
        config?: {
            [key: string]: unknown;
        };
    };
};

export type CreateTestPlanResponse = (unknown);

export type CreateTestPlanError = (unknown);

export type GetTestPlansData = {
    query?: {
        /**
         * Published data only
         */
        public?: boolean;
    };
};

export type GetTestPlansResponse = (TestPlan);

export type GetTestPlansError = unknown;

export type GetTestPlanData = {
    path: {
        id: string;
    };
    query?: {
        public?: boolean;
    };
};

export type GetTestPlanResponse = (unknown);

export type GetTestPlanError = (unknown);

export type DeleteMutableTestPlanData = {
    path: {
        id: string;
    };
};

export type DeleteMutableTestPlanResponse = (void);

export type DeleteMutableTestPlanError = (unknown);

export type PublishTestPlanData = {
    body: {
        publish?: string;
    };
    path: {
        id: string;
    };
};

export type PublishTestPlanResponse = (unknown);

export type PublishTestPlanError = (unknown);

export type MakeTestPlanMutableData = {
    path: {
        id: string;
    };
};

export type MakeTestPlanMutableResponse = (unknown);

export type MakeTestPlanMutableError = (unknown);

export type GetTestPlanInfoData = {
    path: {
        planName: string;
    };
};

export type GetTestPlanInfoResponse = (unknown);

export type GetTestPlanInfoError = (unknown);

export type GetAvailableTestPlansResponse = (Array<{
    planName?: string;
    displayName?: string;
    profile?: string;
    modules?: Array<(string)>;
    configurationFields?: {
        [key: string]: unknown;
    };
    summary?: string;
    variants?: {
        [key: string]: unknown;
    };
}>);

export type GetAvailableTestPlansError = unknown;

export type GetAllTestLogsData = {
    query?: {
        /**
         * Published data only
         */
        public?: boolean;
    };
};

export type GetAllTestLogsResponse = (Array<TestLog>);

export type GetAllTestLogsError = unknown;

export type GetTestLogData = {
    path: {
        id: string;
    };
    query?: {
        public?: boolean;
        /**
         * Since when test created
         */
        since?: number;
    };
};

export type GetTestLogResponse = (TestLog);

export type GetTestLogError = unknown;

export type ExportTestLogData = {
    path: {
        id: string;
    };
    query?: {
        public?: boolean;
    };
};

export type ExportTestLogResponse = ((Blob | File));

export type ExportTestLogError = (unknown);

export type ExportTestHtmlData = {
    path: {
        id: string;
    };
    query?: {
        public?: boolean;
    };
};

export type ExportTestHtmlResponse = ((Blob | File));

export type ExportTestHtmlError = (unknown);

export type GetAllTestInfoResponse = (unknown);

export type GetAllTestInfoError = (unknown);

export type GetTestInfoData = {
    path: {
        id: string;
    };
    query?: {
        /**
         * Published data only
         */
        public?: boolean;
    };
};

export type GetTestInfoResponse = (unknown);

export type GetTestInfoError = (unknown);

export type PublishTestInfoData = {
    body: {
        publish?: string;
    };
    path: {
        id: string;
    };
};

export type PublishTestInfoResponse = (unknown);

export type PublishTestInfoError = (unknown);

export type CreateTestData = {
    body?: {
        /**
         * Optional alias for the test
         */
        alias?: string;
        /**
         * Optional description for the test
         */
        description?: string;
        /**
         * Optional publish flag
         */
        publish?: string;
    };
    query: {
        /**
         * Plan Id
         */
        plan?: string;
        /**
         * Test name, use to identify a specific TestModule
         */
        test: string;
        /**
         * Kind of test variation
         */
        variant?: {
            [key: string]: (string);
        };
    };
};

export type CreateTestResponse = ({
    /**
     * Test name
     */
    name?: string;
    /**
     * Test ID
     */
    id?: string;
    /**
     * Test URL
     */
    url?: string;
});

export type CreateTestError = (unknown | {
    /**
     * Error message
     */
    error?: string;
});

export type GetAvailableTestsResponse = (Array<{
    testName?: string;
    displayName?: string;
    profile?: string;
    configurationFields?: {
        [key: string]: unknown;
    };
    variants?: {
        [key: string]: unknown;
    };
    summary?: string;
}>);

export type GetAvailableTestsError = unknown;

export type GetAllRunningTestIdsResponse = (Array<(string)>);

export type GetAllRunningTestIdsError = unknown;

export type GetTestStatusData = {
    path: {
        id: string;
    };
};

export type GetTestStatusResponse = ({
    id?: string;
    status?: string;
    result?: string;
    exposed?: {
        [key: string]: unknown;
    };
});

export type GetTestStatusError = (unknown);

export type StartTestData = {
    path: {
        id: string;
    };
};

export type StartTestResponse = (unknown);

export type StartTestError = (unknown);

export type CancelTestData = {
    path: {
        id: string;
    };
};

export type CancelTestResponse = (unknown);

export type CancelTestError = (unknown);

export type GetBrowserStatusData = {
    path: {
        id: string;
    };
};

export type GetBrowserStatusResponse = ({
    id?: string;
    show_qr_code?: boolean;
    urls?: Array<(string)>;
    visited?: Array<(string)>;
    runners?: {
        [key: string]: unknown;
    };
});

export type GetBrowserStatusError = (unknown);

export type VisitBrowserUrlData = {
    path: {
        id: string;
    };
    query: {
        /**
         * Url which you want to visit
         */
        url: string;
    };
};

export type VisitBrowserUrlResponse = (void);

export type VisitBrowserUrlError = (unknown);

export type GetJwksResponse = (JWKSet);

export type GetJwksError = unknown;

export type UploadImageData = {
    body: {
        file?: (Blob | File);
    };
    query?: {
        /**
         * Description for image
         */
        description?: string;
    };
};

export type UploadImageResponse = (unknown);

export type UploadImageError = unknown;

export type CreateCertificationData = {
    query?: {
        /**
         * OpenID Conformance Profile
         */
        conformanceProfile?: string;
        /**
         * Software or Service (Deployment) Name & Version
         */
        deploymentVersion?: string;
        /**
         * 1-2 sentence description of the implementation
         */
        implementationDescription?: string;
        /**
         * Licensing terms of the software, if applicable
         */
        license?: string;
        /**
         * URL at which people interested in using your implementation can learn about it and/or obtain it
         */
        moreInfoUrl?: string;
        /**
         * Name of Entity (Implementer) Making this Certification
         */
        nameOfImplementer?: string;
        /**
         * The programming language of the software and deployment environment for it, if applicable
         */
        programmingLanguage?: string;
        /**
         * Conformance Test Suite Software
         */
        suiteSoftware?: string;
        /**
         * Test Date
         */
        testDate?: string;
    };
};

export type CreateCertificationResponse = (unknown);

export type CreateCertificationError = unknown;